
/** 
 *  ADD HUFF EXERCISE
 *
 *  When writing solidity, we most times have to perform some mathematical operations like addition etc
 *  
 *  The task is to write within the `MAIN` macro below, a function that takes in a uint256, adds 1 to it and returns the new value
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function add1(uint256) payable returns(uint256)


#define macro MAIN() = takes(0) returns(0) {
    // load function selector
    0x00 calldataload 0xE0 shr

    // jump if the function selector matches the function signature
    dup1 __FUNC_SIG(add1) eq add_one jumpi

    // function signature did not match, revert
    0x00 0x00 revert

    add_one:
        0x04 calldataload   // [value]
        0x01 add            // [value + 1]
        0x00 mstore         // []
        0x20 0x00 return
}